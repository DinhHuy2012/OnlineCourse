

@{
    ViewBag.Title = "Blog cá nhân";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var listBlog = (List<Model.Model.Blog>)ViewBag.ListBlog;
    var blogcategory = (List<Model.Model.BlogCategory>)ViewBag.BlogCategory;
    var userid = (List<Model.Model.User>)ViewBag.AccountID;


}

<section class="py-5">
    <div class="container">
        <div class="row position-relative">
            <!-- SVG decoration -->
            <figure class="position-absolute top-0 start-0 d-none d-sm-block">
                <svg width="22px" height="22px" viewBox="0 0 22 22">
                    <polygon class="fill-purple" points="22,8.3 13.7,8.3 13.7,0 8.3,0 8.3,8.3 0,8.3 0,13.7 8.3,13.7 8.3,22 13.7,22 13.7,13.7 22,13.7 "></polygon>
                </svg>
            </figure>

            <!-- Title and breadcrumb -->
            <div class="col-lg-10 mx-auto text-center position-relative">
                <!-- SVG decoration -->
                <figure class="position-absolute top-50 end-0 translate-middle-y">
                    <svg width="27px" height="27px">
                        <path class="fill-orange" d="M13.122,5.946 L17.679,-0.001 L17.404,7.528 L24.661,5.946 L19.683   ,11.533 L26.244,15.056 L18.891,16.089 L21.686,23.068 L15.400,19.062 L13.122,26.232 L10.843,19.062 L4.557,23.068 L7.352,16.089 L-0.000,15.056 L6.561,11.533 L1.582,5.946 L8.839,7.528 L8.565,-0.001 L13.122,5.946 Z"></path>
                    </svg>
                </figure>

                <!-- SVG decoration -->
                <figure class="position-absolute top-100 start-50 translate-middle mt-3 ms-n9 d-none d-lg-block">
                    <svg>
                        <path class="fill-success" d="m181.6 6.7c-0.1 0-0.2-0.1-0.3 0-2.5-0.3-4.9-1-7.3-1.4-2.7-0.4-5.5-0.7-8.2-0.8-1.4-0.1-2.8-0.1-4.1-0.1-0.5 0-0.9-0.1-1.4-0.2-0.9-0.3-1.9-0.1-2.8-0.1-5.4 0.2-10.8 0.6-16.1 1.4-2.7 0.3-5.3 0.8-7.9 1.3-0.6 0.1-1.1 0.3-1.8 0.3-0.4 0-0.7-0.1-1.1-0.1-1.5 0-3 0.7-4.3 1.2-3 1-6 2.4-8.8 3.9-2.1 1.1-4 2.4-5.9 3.9-1 0.7-1.8 1.5-2.7 2.2-0.5 0.4-1.1 0.5-1.5 0.9s-0.7 0.8-1.1 1.2c-1 1-1.9 2-2.9 2.9-0.4 0.3-0.8 0.5-1.2 0.5-1.3-0.1-2.7-0.4-3.9-0.6-0.7-0.1-1.2 0-1.8 0-3.1 0-6.4-0.1-9.5 0.4-1.7 0.3-3.4 0.5-5.1 0.7-5.3 0.7-10.7 1.4-15.8 3.1-4.6 1.6-8.9 3.8-13.1 6.3-2.1 1.2-4.2 2.5-6.2 3.9-0.9 0.6-1.7 0.9-2.6 1.2s-1.7 1-2.5 1.6c-1.5 1.1-3 2.1-4.6 3.2-1.2 0.9-2.7 1.7-3.9 2.7-1 0.8-2.2 1.5-3.2 2.2-1.1 0.7-2.2 1.5-3.3 2.3-0.8 0.5-1.7 0.9-2.5 1.5-0.9 0.8-1.9 1.5-2.9 2.2 0.1-0.6 0.3-1.2 0.4-1.9 0.3-1.7 0.2-3.6 0-5.3-0.1-0.9-0.3-1.7-0.8-2.4s-1.5-1.1-2.3-0.8c-0.2 0-0.3 0.1-0.4 0.3s-0.1 0.4-0.1 0.6c0.3 3.6 0.2 7.2-0.7 10.7-0.5 2.2-1.5 4.5-2.7 6.4-0.6 0.9-1.4 1.7-2 2.6s-1.5 1.6-2.3 2.3c-0.2 0.2-0.5 0.4-0.6 0.7s0 0.7 0.1 1.1c0.2 0.8 0.6 1.6 1.3 1.8 0.5 0.1 0.9-0.1 1.3-0.3 0.9-0.4 1.8-0.8 2.7-1.2 0.4-0.2 0.7-0.3 1.1-0.6 1.8-1 3.8-1.7 5.8-2.3 4.3-1.1 9-1.1 13.3 0.1 0.2 0.1 0.4 0.1 0.6 0.1 0.7-0.1 0.9-1 0.6-1.6-0.4-0.6-1-0.9-1.7-1.2-2.5-1.1-4.9-2.1-7.5-2.7-0.6-0.2-1.3-0.3-2-0.4-0.3-0.1-0.5 0-0.8-0.1s-0.9 0-1.1-0.1-0.3 0-0.3-0.2c0-0.4 0.7-0.7 1-0.8 0.5-0.3 1-0.7 1.5-1l5.4-3.6c0.4-0.2 0.6-0.6 1-0.9 1.2-0.9 2.8-1.3 4-2.2 0.4-0.3 0.9-0.6 1.3-0.9l2.7-1.8c1-0.6 2.2-1.2 3.2-1.8 0.9-0.5 1.9-0.8 2.7-1.6 0.9-0.8 2.2-1.4 3.2-2 1.2-0.7 2.3-1.4 3.5-2.1 4.1-2.5 8.2-4.9 12.7-6.6 5.2-1.9 10.6-3.4 16.2-4 5.4-0.6 10.8-0.3 16.2-0.5h0.5c1.4-0.1 2.3-0.1 1.7 1.7-1.4 4.5 1.3 7.5 4.3 10 3.4 2.9 7 5.7 11.3 7.1 4.8 1.6 9.6 3.8 14.9 2.7 3-0.6 6.5-4 6.8-6.4 0.2-1.7 0.1-3.3-0.3-4.9-0.4-1.4-1-3-2.2-3.9-0.9-0.6-1.6-1.6-2.4-2.4-0.9-0.8-1.9-1.7-2.9-2.3-2.1-1.4-4.2-2.6-6.5-3.5-3.2-1.3-6.6-2.2-10-3-0.8-0.2-1.6-0.4-2.5-0.5-0.2 0-1.3-0.1-1.3-0.3-0.1-0.2 0.3-0.4 0.5-0.6 0.9-0.8 1.8-1.5 2.7-2.2 1.9-1.4 3.8-2.8 5.8-3.9 2.1-1.2 4.3-2.3 6.6-3.2 1.2-0.4 2.3-0.8 3.6-1 0.6-0.2 1.2-0.2 1.8-0.4 0.4-0.1 0.7-0.3 1.1-0.5 1.2-0.5 2.7-0.5 3.9-0.8 1.3-0.2 2.7-0.4 4.1-0.7 2.7-0.4 5.5-0.8 8.2-1.1 3.3-0.4 6.7-0.7 10-1 7.7-0.6 15.3-0.3 23 1.3 4.2 0.9 8.3 1.9 12.3 3.6 1.2 0.5 2.3 1.1 3.5 1.5 0.7 0.2 1.3 0.7 1.8 1.1 0.7 0.6 1.5 1.1 2.3 1.7 0.2 0.2 0.6 0.3 0.8 0.2 0.1-0.1 0.1-0.2 0.2-0.4 0.1-0.9-0.2-1.7-0.7-2.4-0.4-0.6-1-1.4-1.6-1.9-0.8-0.7-2-1.1-2.9-1.6-1-0.5-2-0.9-3.1-1.3-2.5-1.1-5.2-2-7.8-2.8-1-0.8-2.4-1.2-3.7-1.4zm-64.4 25.8c4.7 1.3 10.3 3.3 14.6 7.9 0.9 1 2.4 1.8 1.8 3.5-0.6 1.6-2.2 1.5-3.6 1.7-4.9 0.8-9.4-1.2-13.6-2.9-4.5-1.7-8.8-4.3-11.9-8.3-0.5-0.6-1-1.4-1.1-2.2 0-0.3 0-0.6-0.1-0.9s-0.2-0.6 0.1-0.9c0.2-0.2 0.5-0.2 0.8-0.2 2.3-0.1 4.7 0 7.1 0.4 0.9 0.1 1.6 0.6 2.5 0.8 1.1 0.4 2.3 0.8 3.4 1.1z"></path>
                    </svg>
                </figure>

                <!-- Title -->
                <h1>Blog cá nhân</h1>
                <!-- Breadcrumb -->

            </div>
        </div>
    </div>
</section>
<!-- =======================
Page Banner END -->

@{
    int pageSize = 8; // Số lượng mục trên mỗi trang
    int totalItems = listBlog.Count; // Tổng số blog
    int totalPages = (int)Math.Ceiling(totalItems / (double)pageSize); // Tính tổng số trang

    // Giả sử bạn lấy số trang hiện tại từ Query String, mặc định là 1 nếu không có thông tin
    int currentPage = 1;
    if (int.TryParse(Request.QueryString["page"], out int page))
    {
        currentPage = Math.Max(page, 1); // Đảm bảo số trang không nhỏ hơn 1
    }

    // Lấy blogs cho trang hiện tại
    var blogsToShow = listBlog
        .OrderByDescending(x => x.PublishedDate)
        .Skip((currentPage - 1) * pageSize)
        .Take(pageSize)
        .ToList();
}
<!-- =======================
Page content START -->
<section class="position-relative pt-0 pt-lg-5">
    <div class="container">
        <div class="row g-4">
            <!-- Card item START -->
            @foreach (var item in blogsToShow)
            {
                <div class="col-sm-6 col-lg-4 col-xl-3">
                    <div class="card bg-transparent">
                        <div class="overflow-hidden rounded-3">
                            <img src="@item.ImageBlog" href="/chi-tiet-blog/@item.MetaTitle-@item.Id" style="width:300px;height:200px" class="card-img" alt="course image">
                            <!-- Overlay -->
                            <div class="bg-overlay bg-dark opacity-4"></div>
                            <div class="card-img-overlay d-flex align-items-start p-3">
                                <!-- badge -->
                                @foreach (var category in blogcategory)
                                {
                                    if (category.Id == @item.CategoryBlogId)
                                    {
                                        <a href="/chi-tiet-blog/@item.MetaTitle-@item.Id" class="randomColorLink badge text-white">@category.Name</a>
                                    }


                                }
                                <style>
                                    .bg-custom-color1 {
                                        background-color: #FFA07A;
                                    }
                                    .bg-custom-color2 {
                                        background-color: brown;
                                    }
                                    .bg-custom-color3 {
                                        background-color: red;
                                    }

                                </style>
                                <script>
                                    document.addEventListener("DOMContentLoaded", function () {
                                        var colors = ['bg-danger', 'bg-success', 'bg-primary', 'bg-warning', 'bg-info', 'bg-custom-color1', 'bg-custom-color2','bg-dark']; // Thêm 'bg-light' và 'bg-dark' vào danh sách
                                        var links = document.querySelectorAll('.randomColorLink');

                                        links.forEach(function (link) {
                                            var randomColor = colors[Math.floor(Math.random() * colors.length)]; // Chọn một màu ngẫu nhiên cho mỗi liên kết
                                            link.classList.add(randomColor);
                                        });
                                    });


                                </script>
                            </div>
                        </div>

                        <!-- Card body -->
                        <div class="card-body">
                            <!-- Title -->
                            <h5 class="card-title"><a href="/chi-tiet-blog/@item.MetaTitle-@item.Id">@item.Name</a></h5>
                        
                            <p class="text-truncate-2">@item.Title</p>
                            <!-- Info -->
                            <div class="d-flex justify-content-between">
                                @foreach (var user in userid)
                                {
                                    if (user.Id == @item.UserID)            
                                    {
                                        <h6 class="mb-0"><a href="/trang-ca-nhan/@item.UserID">@user.Name</a></h6>
                                    }


                                }
                                @{
                                    // Giả sử 'item.PublishedDate' là thời điểm bài viết được đăng
                                    var publishedDateTime = item.PublishedDate;
                                    var currentTime = DateTime.Now;

                                    // Tính toán khoảng thời gian giữa thời điểm hiện tại và thời điểm đăng bài
                                    var timeSpan = currentTime - publishedDateTime;

                                    string timeAgo;

                                    if (timeSpan.TotalDays >= 1)
                                    {
                                        // Định dạng là số ngày trước, ví dụ: "1d ago"
                                        timeAgo = $"{(int)timeSpan.TotalDays}d ago";
                                    }
                                    else if (timeSpan.TotalHours >= 1)
                                    {
                                        // Định dạng là số giờ trước, ví dụ: "1h ago"
                                        timeAgo = $"{(int)timeSpan.TotalHours}h ago";
                                    }
                                    else if (timeSpan.TotalMinutes >= 1)    
                                    {
                                        // Định dạng là số phút trước, ví dụ: "30m ago"
                                        timeAgo = $"{(int)timeSpan.TotalMinutes}m ago";
                                    }
                                    else
                                    {
                                        // Định dạng là số giây trước nếu ít hơn một phút, ví dụ: "30s ago"
                                        timeAgo = $"{(int)timeSpan.TotalSeconds}s ago";
                                    }
                                }
                                <span class="small">@timeAgo</span>
                            </div>
                        </div>
                    </div>
                </div>
            }







        </div> <!-- Row end -->
        <!-- Pagination START -->
        <nav class="d-flex justify-content-center mt-5" aria-label="navigation">
            <ul class="pagination pagination-primary-soft rounded mb-0">
                <li class="page-item"><a class="page-link" href="?page=1">Đầu</a></li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")"><a class="page-link" href="?page=@i">@i</a></li>
                }
                <li class="page-item"><a class="page-link" href="?page=@totalPages">Cuối</a></li>
            </ul>
        </nav>

        <!-- Pagination END -->

    </div>
</section>

